//盒子模型，将盒子相关信息进行定义，包括padding, border, shadow, 盒子模型的相关单位使用 px像素单位。
//border 属性：width
@use "sass:color";
@import "./color";
$fontsize:16px;
.border-none{
    border:none;
}

.border-style-solid{
    border-style: solid;
}

.border-style-dotted{
    border-style: dotted;
}

//基础属性
.padding-top {
    padding-top: 0.25em !important;
}
.padding-left{
    padding-left: .5em !important;
}
.padding-right{
    padding-right: .5em !important;
}
.padding-bottom{
    padding-bottom: 0.25em !important;
}
.padding{
    padding: 0.25em 1em !important;
}
@for $i from 1 to 10{
    @if $i <= 4{
        
        $fontsize: 1 - (4 - $i) * 0.1;
        .margin-top-#{$i}{
            margin-top: $fontsize * 0.1rem * $i;
        }
        .margin-left-#{$i}{
            margin-left: $fontsize * 0.2rem  * $i;
        }
        .margin-right-#{$i}{
            margin-right: $fontsize * 0.2rem  * $i;
        }
        .margin-bottom-#{$i}{
            margin-bottom: $fontsize * 0.1rem * $i;
        }
        .margin-#{$i}{
            margin: $fontsize * 0.1rem * $i $fontsize * 0.2rem * $i;
        }
        
    }
    

    @if $i > 4{
        $fontsize: 1 + ($i - 4) * 0.1;
        
        .margin-top-#{$i}{
            margin-top: $fontsize * 0.1rem * $i;
        }
        .margin-left-#{$i}{
            margin-left: $fontsize * 0.2rem * $i;
        }
        .margin-right-#{$i}{
            margin-right: $fontsize * 0.2rem * $i;
        }
        .margin-bottom-#{$i}{
            margin-bottom: $fontsize * 0.1rem * $i;
        }
        .margin-#{$i}{
            margin: $fontsize * 0.1rem * $i $fontsize * 0.2rem * $i;
        }
    }
}

//shadow
@for $i from 1 to 10{
    .box-shadow-#{$i} {
        box-shadow: $i * 0.1 *1px $i*0.1*1px $i*1px $i*0.1*1px rgba(0, 0, 0, 0.2);
        &:active{
            box-shadow: $i * 0.1 *1px $i*0.1*1px $i*1px $i*0.1*1px rgba(0, 0, 0, 0.1);
        }
    }
    .border-radius-#{$i} {
        border-radius: $i*1px;
    }
    @if $i == 4{
        .box-shadow {
            box-shadow: $i * 0.1 *1px $i*0.1*1px $i*1px $i*0.1*1px rgba(0, 0, 0, 0.2);
            &:active{
                box-shadow: $i * 0.1 *1px $i*0.1*1px $i*1px $i*0.1*1px rgba(0, 0, 0, 0.1);
            }
        }        
        .border-radius {
            border-radius: $i*1px;
        }
    }
}

@each $key, $color in $semantic_range {
    @for $range from 1 to 10 {
        //生成颜色相关匹配色。
        @if $range  < 4{
            $whitens: 4-$range;
            $co:color.scale($color, $whiteness: ($whitens*30)*1%, $blackness: -($whitens*30)*1%);
            .#{$key}-bg-#{$range} {
                background-color: $co !important;
            }
            .#{$key}-border-#{$range}{
                // border-color: $co;
                border: 1px solid $co;
            }
            .#{$key}-border-left-#{$range} {
                border-left-color: $co;
                border-left-width: 1px;
                border-left-style: solid;
            }
            .#{$key}-border-top-#{$range} {
                border-top-color: $co;
                border-top-width: 1px;
                border-top-style: solid;
            }
            .#{$key}-border-right-#{$range} {
                border-right-color: $co;
                border-right-width: 1px;
                border-right-style: solid;
            }
            .#{$key}-border-bottom-#{$range} {
                border-bottom-color: $co;
                border-bottom-width: 1px;
                border-bottom-style: solid;
            }
            
        }
        @if $range > 4{
            $blackns: $range - 4;
            $co: color.scale($color, $blackness: $blackns*20*1%);
            .#{$key}-bg-#{$range} {
                background-color: $co  !important;
            }
            .#{$key}-border-#{$range}{
                border: 1px solid $co;
            }
            .#{$key}-border-left-#{$range} {
                border-left-color: $co;
                border-left-width: 1px;
                border-left-style: solid;
            }
            .#{$key}-border-top-#{$range} {
                border-top-color: $co;
                border-top-width: 1px;
                border-top-style: solid;
            }
            .#{$key}-border-right-#{$range} {
                border-right-color: $co;
                border-right-width: 1px;
                border-right-style: solid;
            }
            .#{$key}-border-bottom-#{$range} {
                border-bottom-color: $co;
                border-bottom-width: 1px;
                border-bottom-style: solid;
            }
        }
        @if $range == 4 {
            .#{$key}-bg-#{$range} {
                background-color: $color  !important;
            }
            
            .#{$key}-bg {
                background-color: $color  !important;
                
            }
            .#{$key}-border-#{$range}{
                border: 1px solid $color !important
            }
            .#{$key}-border{
                border: 1px solid $color !important;
            }

            .#{$key}-border-left-#{$range} {
                border-left-color: $color;
                border-left-width: 1px;
                border-left-style: solid;
            }
            .#{$key}-border-top-#{$range} {
                border-top-color: $color;
                border-top-width: 1px;
                border-top-style: solid;
            }
            .#{$key}-border-right-#{$range} {
                border-right-color: $color;
                border-right-width: 1px;
                border-right-style: solid;
            }
            .#{$key}-border-bottom-#{$range} {
                border-bottom-color: $color;
                border-bottom-width: 1px;
                border-bottom-style: solid;
            }
        }
    }
}
